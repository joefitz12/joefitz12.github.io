// defining breakpoints
@mixin phone {
    @media (max-width: 599px) { @content; }
}
@mixin tablet_portrait {
    @media (min-width: 600px) { @content; }
}
@mixin tablet_landscape {
    @media (min-width: 900px) { @content; }
}
@mixin desktop_medium {
    @media (min-width: 1200px) { @content; }
}
@mixin desktop_large {
    @media (min-width: 1800px) { @content; }
}

// header fixes
@mixin header_query {
    @media (max-width: 791px) { @content; }
}

// header
.mobile {
    display: none;
}

html, body {
    @include phone {
        overflow-y: hidden;
    }
}

.header {
    @include phone {
        // title
        .title-container {
            flex-direction: column;
            padding-left: 0;
            padding-top: 25px;
        }
        // lightbulbs
        .lightbulb-container {
            right: -30px;
            // > div:nth-child(n+4){
            //     display:none;
            // }
        }
        .lightbulb .cord {
            --defaultHeight: 27px;
            height: 27px;
        }
        // main div containers
        > div:nth-child(1) {
            width: 100%;
            padding-left: 5px;
        }
        > div:nth-child(2){
            width: 0;
            min-width: 0;
            padding: 0;
        }
    }
    @include header_query {
        .title-container {
            flex-direction: column;;
        }
        .title {
            display: none;
        }
        .mobile.title {
            display: inline;
            min-width: 100%;
            font-size: 44px;
        }
        // lightbulbs
        .lightbulb-container {
            > div:nth-child(n+4){
                display:none;
            }
        }
    }
}

.main.container {
    @include phone {
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        * {
            user-select: none;
            -webkit-user-select: none;
            -moz-user-select: none;
        }
        min-height: calc(100vh - 193px);
        height: calc(100vh - 193px); /* Fallback for browsers that do not support Custom Properties */
        height: calc((var(--vh, 1vh) * 100) - 193px);
        width: 100vw; /* Fallback for browsers that do not support Custom Properties */
        width: calc(var(--vw, 1vw) * 100 - 30px);
        overflow-y: hidden;
        align-content: flex-start;
        // setting up horizontal scroll 
        flex-flow: row nowrap;
        scroll-snap-type: x mandatory;
        > canvas {
            position: fixed;
            top: 0;
            left: 0;
        }
        > div:not(.controller-container) {
            padding-left: 30px;
            padding-right: 30px;
            scroll-snap-align: center;
            > div {
                z-index: 2;
            }
        }
        .controller-container {
            position: fixed;
            left: calc(15px / 2);
            z-index: 2;
            bottom: -125px;
        }
    }
}